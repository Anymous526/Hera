<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- 数据源定义,使用Apache DBCP 连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接数 -->
		<property name="initialSize" value="1" />
		<!-- 最大活动连接数 -->
		<property name="maxActive" value="50" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="1" />
		<!-- 获取连接超时等待时间(毫秒) -->
		<property name="maxWait" value="10000" />
		<!-- 空闲池空闲连接激活线程的运行间隔时间（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 空闲池中空闲连接能够被激活前的最小空闲时间（毫秒） -->
		<property name="minEvictableIdleTimeMillis" value="10000" />
	</bean>

	<!-- 处理oracle lob类型的数据保存的问题 -->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor">
			<bean
				class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" />
		</property>
	</bean>

	<!--Hibernate SessionFatory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocations">
			<list>
				<value>classpath*:hibernate/**/hibernate.cfg.xml</value>
			</list>
		</property>
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<!-- 
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.format_sql">
					${hibernate.format_sql}
				</prop>
				 -->
				<prop key="hibernate.cache.use_query_cache">
					${hibernate.cache.use_query_cache}
				</prop>
				<prop key="hibernate.cache.provider_class">
					${hibernate.cache.provider_class}
				</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">
					${hibernate.ehcache_config_file}
				</prop>
			</props>
		</property>
		<property name="lobHandler" ref="oracleLobHandler" />
	</bean>

	<!--Hibernate TransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config>
		<aop:pointcut id="bmpManagerOperations" expression="execution(* com.justinmobile.bmp..*Manager.*(..))" /> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bmpManagerOperations" />	
	</aop:config>


	<!-- 基本事务定义,使用transactionManager作事务管理,默认get*方法的事务为readonly,其余方法按默认设置. 默认的设置请参考Spring文档事务一章. -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="createPayProcess" propagation="REQUIRES_NEW"/>
			<tx:method name="savePayProcessParam" propagation="REQUIRES_NEW"/>
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="show*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="list*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*Tx" propagation="REQUIRES_NEW" rollback-for="com.justinmobile.core.exception.BusinessException"/>
			<tx:method name="*" propagation="REQUIRED"
				rollback-for="com.justinmobile.core.exception.BusinessException" />
		</tx:attributes>
	</tx:advice>

</beans>
